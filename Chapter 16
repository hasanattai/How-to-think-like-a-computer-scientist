class Point:
    def __init__(self, x, y):
        self.x = x
        self.y = y

    def reflect_x(self):
        new = Point(self.x, -self.y)
        return new

    def slope_with_origin(self):
        if self.x == 0:
            raise ValueError('Point.x cannot be 0')
        else:
            slope = self.y/self.x
            return slope

    def get_line_to(self, point_2):
        slope = (point_2.y - self.y) / (point_2.x - self.x)
        y_intercept = slope * (-self.x) + self.y
        tup = (slope, y_intercept)
        return tup

    def __str__(self):
        return "({0}, {1})".format(self.x, self.y)


class Rectangle:

    def __init__(self, posn, w, h):
        self.corner = posn
        self.width = w
        self.height = h

    def __str__(self):
        return "({0}, {1}, {2})".format(self.corner, self.width, self.height)

    def grow(self, delta_width, delta_height):
        self.width += delta_width
        self.height += delta_height

    def move(self, dx, dy):
        self.corner.x += dx
        self.corner.y += dy

    def area(self):
        area = self.width * self.height
        return area

    def perimeter(self):
        perimeter = 2 * self.width + 2 * self.height
        return perimeter

    def flip(self):
        w = self.width
        self.width = self.height
        self.height = w

def distance(point_1, point_2):
    dist = ((point_1.x - point_2.x)**2 + (point_1.y - point_2.y)**2)**0.5
    return dist


def same_coordinates(p1, p2):
    return (p1.x == p2.x) and (p1.y == p2.y)


box = Rectangle(Point(0, 0), 100, 200)
bomb = Rectangle(Point(100, 80), 5, 10)
print("box: ", box)
print("bomb: ", bomb)

r = Rectangle(Point(100, 50), 10, 5)
print(r.width == 10 and r.height == 5)
r.flip()
print(r.width == 5 and r.height == 10)
