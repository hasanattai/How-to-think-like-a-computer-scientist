class Point:
    def __init__(self, x, y):
        self.x = x
        self.y = y

    def reflect_x(self):
        new = Point(self.x, -self.y)
        return new

    def slope_with_origin(self):
        if self.x == 0:
            raise ValueError('Point.x cannot be 0')
        else:
            slope = self.y/self.x
            return slope

    def get_line_to(self, point_2):
        slope = (point_2.y - self.y) / (point_2.x - self.x)
        y_intercept = slope * (-self.x) + self.y
        tup = (slope, y_intercept)
        return tup


def distance(point_1, point_2):
    dist = ((point_1.x - point_2.x)**2 + (point_1.y - point_2.y)**2)**0.5
    return dist
